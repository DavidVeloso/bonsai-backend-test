# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddTicketInput {
  title: String!
  genre: [String!]!
  price: Float!
  inventory: Int!
  imageUrl: String!
  date: DateTime!
  originId: ObjectId!
  movie: ObjectId!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input ListTicketsInput {
  cursorDate: DateTime
  sortDate: Int = -1
  limit: Int = 20
  offset: Int = 0
}

type Movie {
  _id: ObjectId!
  Title: String!
  Year: String!
  Rated: String!
  Released: String!
  Runtime: String!
  Genre: [String!]!
  Director: String!
  Writer: String!
  Actors: [String!]!
  Plot: String!
  Language: [String!]!
  Country: String!
  Awards: String!
  Poster: String!
  Ratings: [Rating!]!
  Metascore: String!
  imdbRating: String!
  imdbVotes: String!
  imdbID: String!
  Production: String!
}

input MovieInput {
  id: ObjectId!
}

input MovieList {
  limit: Int = 20
  offset: Int = 0
}

type MoviePaginateResult {
  docs: [Movie!]!
  totalDocs: Int!
  limit: Int!
  offset: Int!
}

type Mutation {
  addTicket(input: AddTicketInput!): Ticket!
  syncTickets(input: SyncTicketsInput!): String!
}

"""Mongo object id scalar type"""
scalar ObjectId

type Query {
  ticket(input: TicketInput!): Ticket
  listTickets(input: ListTicketsInput!): TicketPaginateResult!
  ticketsWithoutMovie(input: TicketWithoutMovie!): TicketPaginateResult!
  movie(input: MovieInput!): Movie
  listMovies(input: MovieList!): MoviePaginateResult!
}

type Rating {
  Value: String!
  Source: String!
}

input SyncTicketsInput {
  maxTicketsToSync: Int = 100
}

type Ticket {
  _id: ObjectId!
  title: String!
  genre: [String!]!
  price: Float!
  inventory: Int!
  imageUrl: String!
  date: DateTime!
  movie: Movie
  originId: ObjectId!
}

input TicketInput {
  id: ObjectId!
}

type TicketPaginateResult {
  docs: [Ticket!]!
  totalDocs: Int!
  limit: Int!
  offset: Int!
}

input TicketWithoutMovie {
  limit: Int = 20
  offset: Int = 0
}
